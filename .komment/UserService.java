{"name":"UserService.java","path":"UserService.java","content":{"structured":{"description":"A `UserService` class with an `authenticate()` method that takes a username and password as input and returns the authenticated user if found, or `null` otherwise. The class uses an array of `User` objects to store user credentials, and iterates over them to find the matching user.","items":[{"id":"27716c50-5071-e1ac-3a44-b6ed8a6ab0fa","ancestors":[],"type":"function","description":"contains a static array of User objects and a single method for authenticating users based on their username and password. The method iterates through the array of Users and checks if the provided username and password match any of the stored usernames and passwords, returning the matching User object or null if no match is found.","name":"UserService","code":"public class UserService {\n    private static final User[] users = {\n        new User(\"user1\", \"password1\"),\n        new User(\"user2\", \"password2\"),\n        new User(\"user3\", \"password3\")\n    };\n\n    public User authenticate(String username, String password) {\n        for (User user : users) {\n            if (user.getUsername().equals(username) && user.getPassword().equals(password)) {\n                return user;\n            }\n        }\n        return null;\n    }\n}","location":{"start":3,"insert":3,"offset":" ","indent":0,"comment":null},"item_type":"class","length":16,"docLength":null,"doc":"A `UserService` class with an `authenticate()` method that takes a username and password as input and returns the authenticated user if found, or `null` otherwise. The class uses an array of `User` objects to store user credentials, and iterates over them to find the matching user."},{"id":"ab03ad10-f037-43b0-4243-43f7c9a45700","ancestors":["27716c50-5071-e1ac-3a44-b6ed8a6ab0fa"],"type":"function","description":"verifies a given username and password in the `users` list and returns the corresponding user object if found, or `null` otherwise.","params":[{"name":"username","type_name":"String","description":"username of the user being authenticated.","complex_type":false},{"name":"password","type_name":"String","description":"password to be authenticated by the `authenticate` function.","complex_type":false}],"returns":{"type_name":"User","description":"a `User` object if the provided username and password match any saved in the `users` list, otherwise it returns `null`.\n\n* If a user is found that matches the provided username and password, the function returns a `User` object representing that user.\n* If no user is found that matches the provided credentials, the function returns `null`.\n* The function does not modify the input parameters or any other part of the program's state.","complex_type":true},"usage":{"language":"java","code":"User user = UserService.authenticate(\"user1\", \"password1\");\nif (user == null) {\n    System.out.println(\"Invalid username and password combination.\");\n} else {\n    System.out.println(\"Valid username and password combination.\");\n}\n","description":""},"name":"authenticate","code":"public User authenticate(String username, String password) {\n        for (User user : users) {\n            if (user.getUsername().equals(username) && user.getPassword().equals(password)) {\n                return user;\n            }\n        }\n        return null;\n    }","location":{"start":10,"insert":10,"offset":" ","indent":4,"comment":null},"item_type":"method","length":8,"docLength":null,"doc":"A `UserService` class with an `authenticate()` method that takes a username and password as input and returns the authenticated user if found, or `null` otherwise. The class uses an array of `User` objects to store user credentials, and iterates over them to find the matching user."}]}}}